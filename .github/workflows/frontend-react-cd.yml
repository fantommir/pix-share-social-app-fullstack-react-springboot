name: CD - Deploy React Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Send Slack notification about commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {
            "text": ":github-logo: pix-share-social-app-fullstack-react-springboot repository commit message: ${{ github.event.head_commit.message }} - sha: ${{ github.sha }}",
          }
          ' "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Send Slack notification about deployment start
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {
            "text": "React Frontend deployment started :react: :radical_rocket: :fingers_crossed: - :github-actions: Job #${{ github.run_id }}",
          }
          ' "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%Y%m%d.%j.%H%M%S')" >> $GITHUB_OUTPUT

      - name: Docker Build and Push
        run: |
          chmod +x ../.ci-cd/scripts/docker_build_publish.sh
          USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
          REPO=pixshare-react \
          TAG=${{ steps.build-number.outputs.BUILD_NUMBER }} \          
          ../.ci-cd/scripts/docker_build_publish.sh . \
          --build-arg api_base_url=${{ secrets.AWS_EB_ENVIRONMENT_URL  }}:8080 \
          --build-arg api_version=v1

      - name: Send Slack notification about docker image pushed to docker hub
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {
            "text": ":docker: Image tag: ${{ steps.build-number.outputs.BUILD_NUMBER }} pushed to Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/pixshare-react",
          }
          ' "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Update react frontend image tag in Dockerrun.aws.json with new build number
        run: |
          echo "Dockerrun.aws.json before image tag update:"
          cat ../Dockerrun.aws.json
          sed -i -E 's/(${{ secrets.DOCKERHUB_USERNAME }}\/pixshare-react:)([^"]*)/\1'"${{ steps.build-number.outputs.BUILD_NUMBER }}"'/' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after image tag update:"
          cat ../Dockerrun.aws.json

      - name: Send Slack notification about elastic beanstalk deployment start
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {
            "text": ":aws: Deployment to :aws_eb: Elastic Beanstalk started",
          }
          ' "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.sha }}
          region: ${{ secrets.AWS_EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 60

      - name: Send Slack notification about repo commit start
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {
            "text": ":merge: Committing to :github-logo: pix-share-social-app-fullstack-react-springboot repository",
          }
          ' "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Fetch changes from remote main branch
        run: |
          git fetch origin main
          git branch
          git branch -r

      - name: Switch to target branch
        run: |
          git checkout ${{ vars.TARGET_BRANCH }}
          git pull

      - name: Merge main branch into target branch
        run: |
          echo "Branch ref: ${{ github.ref }}"
          echo "Target branch: ${{ vars.TARGET_BRANCH }}"
          git branch
          git branch -r
          git merge origin/main

      - name: Commit changes in Dockerrun.aws.json
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Update Dockerrun.aws.json with new react frontend image tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ vars.TARGET_BRANCH }}
          force: false  # Avoid force pushing

      - name: Send Slack notification about elastic beanstalk deployment and repo commit end
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {
            "text": "Deployment and commit completed :completed: :partytime: - ${{ secrets.AWS_EB_ENVIRONMENT_URL  }}",
          }
          ' "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Send Slack notification about job end
        if: always()
        run: |
          STATUS_MESSAGE=":question: Unknown"
          if [ "${{ job.status }}" = "success" ]; then
                STATUS_MESSAGE=":github-check-mark: Success"
          elif [ "${{ job.status }}" = "failure" ]; then
                STATUS_MESSAGE=":github-changes-requested: Failed"            
          elif [ "${{ job.status }}" = "cancelled" ]; then
                STATUS_MESSAGE=":gitlab-warning: Cancelled"
          fi

          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"Job Status: ${STATUS_MESSAGE}\" }" "${{ secrets.SLACK_WEBHOOK_URL }}"
